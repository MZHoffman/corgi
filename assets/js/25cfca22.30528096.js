"use strict";(self.webpackChunk_wethegit_corgi_docs=self.webpackChunk_wethegit_corgi_docs||[]).push([[520],{5318:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),g=r,m=d["".concat(s,".").concat(g)]||d[g]||p[g]||o;return a?n.createElement(m,l(l({ref:t},c),{},{components:a})):n.createElement(m,l({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1547:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=a(5773),r=(a(7378),a(5318));const o={description:"Manages state based on the browser's localStorage."},l="useLocalStorage",i={unversionedId:"hooks/use-local-storage",id:"hooks/use-local-storage",title:"useLocalStorage",description:"Manages state based on the browser's localStorage.",source:"@site/docs/hooks/use-local-storage.mdx",sourceDirName:"hooks",slug:"/hooks/use-local-storage",permalink:"/corgi/docs/hooks/use-local-storage",draft:!1,tags:[],version:"current",frontMatter:{description:"Manages state based on the browser's localStorage."},sidebar:"tutorialSidebar",previous:{title:"useBreakpoints",permalink:"/corgi/docs/hooks/use-breakpoints"},next:{title:"useLocale",permalink:"/corgi/docs/hooks/use-locale"}},s={},u=[{value:"Return value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2}],c={toc:u};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"uselocalstorage"},(0,r.kt)("inlineCode",{parentName:"h1"},"useLocalStorage")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocalStorage")," is a state manager, similar to React's ",(0,r.kt)("inlineCode",{parentName:"p"},"useState"),",  but all values are set and retrieved based on the user's browser localStorage. This hook is available by default, from within the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@wethegit/react-hooks"},"@wethegit/react-hooks")," NPM package."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useLocalStorage(key, [defaultValue])")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"key"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The localStorage key to get and set.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"defaultValue"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. The default value for ",(0,r.kt)("inlineCode",{parentName:"td"},"key"),". Default: ",(0,r.kt)("inlineCode",{parentName:"td"},'""'),".")))),(0,r.kt)("h2",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"Similar to React's ",(0,r.kt)("inlineCode",{parentName:"p"},"useState")," hook, ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocalStorage")," returns an array containing the state value and a state updater function:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Array index"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The browser's localStorage value corresponding to the ",(0,r.kt)("inlineCode",{parentName:"td"},"key")," argument passed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"Function"),(0,r.kt)("td",{parentName:"tr",align:null},"Updater function which expects the new state value as the sole argument.")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Here's an admittedly-contrived example, which sets the localStorage value of ",(0,r.kt)("inlineCode",{parentName:"p"},"userID")," to ",(0,r.kt)("inlineCode",{parentName:"p"},'"1234"'),", and logs out the value from localStorage to verify that it's working."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useLocalStorage } from "@wethegit/react-hooks";\n\nconst MyComponent = () => {\n  const [id, setId] = useLocalStorage("userID")\n\n  const handleClick = (_) => setId("1234")\n  \n  console.log(window.localStorage.getItem("userID"))\n\n  return (\n    <button onClick={handleClick}>Set user ID to "1234"</button>\n  )\n};\n')))}p.isMDXComponent=!0}}]);