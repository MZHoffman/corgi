"use strict";(self.webpackChunk_wethegit_corgi_docs=self.webpackChunk_wethegit_corgi_docs||[]).push([[5940],{5318:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,g=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(g,i(i({ref:t},s),{},{components:n})):r.createElement(g,i({ref:t},s))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9713:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(5773),a=(n(7378),n(5318));const o={sidebar_position:1,title:"project"},i="The `project` command",l={unversionedId:"corgi-cli/commands/project",id:"corgi-cli/commands/project",title:"project",description:"Sets up a corgi project.",source:"@site/docs/corgi-cli/commands/project.mdx",sourceDirName:"corgi-cli/commands",slug:"/corgi-cli/commands/project",permalink:"/corgi/docs/corgi-cli/commands/project",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"project"},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/corgi/docs/category/commands"},next:{title:"page",permalink:"/corgi/docs/corgi-cli/commands/page"}},p={},c=[{value:"Basic usage",id:"basic-usage",level:2},{value:"Arguments",id:"arguments",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:2},{value:"Templates",id:"templates",level:2},{value:"Example",id:"example",level:3},{value:"Custom config",id:"custom-config",level:3}],s={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"the-project-command"},"The ",(0,a.kt)("inlineCode",{parentName:"h1"},"project")," command"),(0,a.kt)("p",null,"Sets up a corgi project."),(0,a.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,a.kt)("p",null,"From your command line, ",(0,a.kt)("inlineCode",{parentName:"p"},"cd")," into an empty directory and run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @wethegit/corgi project .\n")),(0,a.kt)("p",null,"The dot ",(0,a.kt)("inlineCode",{parentName:"p"},".")," indicates the current working directory. You can also choose to specify a directory name instead."),(0,a.kt)("p",null,"You'll then be prompted to enter an optional template repo. For more information on templates, see the ",(0,a.kt)("a",{parentName:"p",href:"#templates"},"template option")," below."),(0,a.kt)("h2",{id:"arguments"},"Arguments"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"directory"),(0,a.kt)("td",{parentName:"tr",align:null},"Relative directory to create the project in. If you do not pass a directory argument, you will be prompted for one.")))),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @wethegit/corgi project .\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @wethegit/corgi project my-cool-website\n")),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Flag"),(0,a.kt)("th",{parentName:"tr",align:null},"Short flag"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"--template"),(0,a.kt)("td",{parentName:"tr",align:null},"-t"),(0,a.kt)("td",{parentName:"tr",align:null},"Optional. URL of a GitHub repo's branch containing a corgi template. Example: ",(0,a.kt)("inlineCode",{parentName:"td"},"https://github.com/<user>/<repo>/tree/<branchname>"),". If you do not pass this flag, you will be prompted to enter an optional template.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"--help"),(0,a.kt)("td",{parentName:"tr",align:null},"-h"),(0,a.kt)("td",{parentName:"tr",align:null},"Displays a list of arguments and options.")))),(0,a.kt)("h2",{id:"templates"},"Templates"),(0,a.kt)("p",null,"Pre-defined templates for corgi projects can be pulled into your project automatically, by specifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"--template")," option within the ",(0,a.kt)("inlineCode",{parentName:"p"},"project")," command. These templates must live within a branch of a GitHub repo which you have access to. Templates are just sets of files which ",(0,a.kt)("em",{parentName:"p"},"extend")," the base corgi setup. This typically includes sets of pre-defined pages, components, locales, and so on."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npx @wethegit/corgi project . --template https://github.com/<user>/<repo>/tree/<branchname>\n")),(0,a.kt)("h3",{id:"custom-config"},"Custom config"),(0,a.kt)("p",null,"If a custom template is specified, the ",(0,a.kt)("inlineCode",{parentName:"p"},"project")," command will look for an optional JSON file located the root of the template repo, called ",(0,a.kt)("inlineCode",{parentName:"p"},"corgi-project.config.json"),"."),(0,a.kt)("p",null,"This config file can include overrides for the project, such as NPM dependencies, scripts, and a project name. The default corgi config settings look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n  name: "corgi-project",\n  dependencies: {},\n  devDependencies: {},\n  scripts: {},\n}\n')),(0,a.kt)("p",null,"You can overwrite any of these properties from within your template's ",(0,a.kt)("inlineCode",{parentName:"p"},"corgi-project.config.json"),", like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:"title=corgi-project-config.json",title:"corgi-project-config.json"},'{\n  "name": "andrews-corgi-project",\n  "dependencies": {},\n  "devDependencies": {\n    "eslint": "8.8.0",\n    "eslint-config-next": "12.0.10",\n    "eslint-config-prettier": "~8.3.0",\n    "sass": "~1.49.7",\n    "stylelint": "~14.5.1",\n    "stylelint-config-standard-scss": "~3.0.0",\n    "stylelint-order": "~5.0.0"\n  },\n  "scripts": {\n    "serve-https": "node https-server.js"\n  }\n}\n')))}m.isMDXComponent=!0}}]);