"use strict";(self.webpackChunk_wethegit_corgi_docs=self.webpackChunk_wethegit_corgi_docs||[]).push([[978],{5318:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),g=c(a),m=r,d=g["".concat(p,".").concat(m)]||g[m]||u[m]||l;return a?n.createElement(d,o(o({ref:t},s),{},{components:a})):n.createElement(d,o({ref:t},s))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=g;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6651:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var n=a(5773),r=(a(7378),a(5318));const l={description:"Retrieves global, page-level, and other useful locale data."},o="useLocale",i={unversionedId:"hooks/use-locale",id:"hooks/use-locale",title:"useLocale",description:"Retrieves global, page-level, and other useful locale data.",source:"@site/docs/hooks/use-locale.mdx",sourceDirName:"hooks",slug:"/hooks/use-locale",permalink:"/corgi/docs/hooks/use-locale",draft:!1,tags:[],version:"current",frontMatter:{description:"Retrieves global, page-level, and other useful locale data."},sidebar:"tutorialSidebar",previous:{title:"useLocalStorage",permalink:"/corgi/docs/hooks/use-local-storage"},next:{title:"usePreventScroll",permalink:"/corgi/docs/hooks/use-prevent-scroll"}},p={},c=[{value:"Return value",id:"return-value",level:2},{value:"Usage",id:"usage",level:2}],s={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"uselocale"},(0,r.kt)("inlineCode",{parentName:"h1"},"useLocale")),(0,r.kt)("p",null,"Location: ",(0,r.kt)("inlineCode",{parentName:"p"},"/src/hooks/use-locale.js")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocale")," hook allows you to easily retrieve various pieces of locale-specific data from within your components. In addition to this page, see the ",(0,r.kt)("a",{parentName:"p",href:"../localization/use-locale-hook"},"Localization docs: useLocale hook")," for some common usage patterns."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useLocale([pageDirectoryName])")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Arguments"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pageDirectoryName"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},'Optional. A string pointing to the page\'s locale directory name \u2014 for example, "home" or "work/advertising". This argument only needs to be passed once per page, from within the top-level page component. It acts as a locale "initializer", setting a page-level key in corgi\'s locale data cache, which is necessary for the ',(0,r.kt)("a",{parentName:"td",href:"../pages/page-components#the-pageprovider-component"},(0,r.kt)("inlineCode",{parentName:"a"},"<PageProvider>"))," component.")))),(0,r.kt)("h2",{id:"return-value"},"Return value"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"useLocale")," returns an object containing the following properties:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pageName"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The current page's ",(0,r.kt)("inlineCode",{parentName:"td"},"pageDirectoryName"),", as passed to the hook at the page level.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"locale"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"The current locale string (",(0,r.kt)("inlineCode",{parentName:"td"},'"en"'),", for example).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"localeMap"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("inlineCode",{parentName:"td"},"localeMap")," data for the current locale, as defined in ",(0,r.kt)("inlineCode",{parentName:"td"},"/src/config-locales.js"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"page"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"The page-level locale data, for the current page and locale.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"globals"),(0,r.kt)("td",{parentName:"tr",align:null},"Object"),(0,r.kt)("td",{parentName:"tr",align:null},"The site-wide locale data, for the current locale.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"alternativeLocales"),(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"A list of all available locales for the page, excluding the current locale.")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"General, component-level usage of the ",(0,r.kt)("inlineCode",{parentName:"p"},"useLocale")," hook is straightforward\u2014just call the function and you're done. In this example, we're destructuring a few properties from the hook's return value, and logging them out:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import useLocale from "#hooks/use-locale";\n\nconst MyComponent = () => {\n  const { globals, page, pageName, locale } = useLocale();\n\n  console.log(globals);   // => object of global YAML data for the locale.\n  console.log(page);      // => object of page-level YAML data for the locale.\n  console.log(pageName);  // => "about"\n  console.log(locale);    // => "en"\n\n  return (\n    ...\n  );\n};\n')),(0,r.kt)("p",null,"When used within a ",(0,r.kt)("a",{parentName:"p",href:"../pages/page-components"},(0,r.kt)("strong",{parentName:"a"},"page component")),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"pageDirectoryName")," is a required argument. In this scenario, we'll bind that value to ",(0,r.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER")," and pass ",(0,r.kt)("em",{parentName:"p"},"it")," in, as this value gets used in a few other places throughout the page component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import useLocale from "#hooks/use-locale";\n\nconst LOCALE_FOLDER = "about";\n// for nested pages, this might look more like "work/advertising"\n\nconst AboutPage = () => {\n  const { globals, page, pageName, locale } = useLocale(LOCALE_FOLDER);\n\n  console.log(globals);\n  console.log(page);\n  console.log(pageName);\n  console.log(locale);\n\n  return (\n    ...\n  );\n};\n')))}u.isMDXComponent=!0}}]);