"use strict";(self.webpackChunk_wethegit_corgi_docs=self.webpackChunk_wethegit_corgi_docs||[]).push([[804],{5318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var o=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),h=c(n),d=a,u=h["".concat(s,".").concat(d)]||h[d]||m[d]||r;return n?o.createElement(u,i(i({ref:t},l),{},{components:n})):o.createElement(u,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},3771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var o=n(5773),a=(n(7378),n(5318));const r={sidebar_position:2,description:"The anatomy of a corgi page."},i="Page components",p={unversionedId:"pages/page-components",id:"pages/page-components",title:"Page components",description:"The anatomy of a corgi page.",source:"@site/docs/pages/page-components.mdx",sourceDirName:"pages",slug:"/pages/page-components",permalink:"/corgi/docs/pages/page-components",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"The anatomy of a corgi page."},sidebar:"tutorialSidebar",previous:{title:"Directory Structure",permalink:"/corgi/docs/pages/directory-structure"},next:{title:"Page Transitions",permalink:"/corgi/docs/pages/page-transitions"}},s={},c=[{value:"A basic page component",id:"a-basic-page-component",level:2},{value:"The <code>LOCALE_FOLDER</code> constant",id:"the-locale_folder-constant",level:3},{value:"<code>setupPaths</code> and <code>setupProps</code>",id:"setuppaths-and-setupprops",level:3},{value:"The <code>useLocale</code> hook",id:"the-uselocale-hook",level:3},{value:"The <code>&lt;PageProvider&gt;</code> component",id:"the-pageprovider-component",level:3},{value:"Homepage specifics",id:"homepage-specifics",level:2}],l={toc:c};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"page-components"},"Page components"),(0,a.kt)("p",null,'There are some specific requirements and "boilerplate" for creating a page component in Corgi. While we suggest using the Corgi CLI to ',(0,a.kt)("a",{parentName:"p",href:"../corgi-cli/commands/page"},"create page components"),", this section will provide the information you need to gain a deeper understanding of them."),(0,a.kt)("admonition",{title:"Homepage specifics",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},'There are some specifics for the "home" page component of your project. Check out the ',(0,a.kt)("a",{parentName:"p",href:"#homepage-specifics"},"homepage specifics")," below for details.")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},'For clarity, the term "page component" here is ',(0,a.kt)("em",{parentName:"p"},"not")," to be confused with Next.js' ",(0,a.kt)("inlineCode",{parentName:"p"},"<Page>")," component. This refers to the default exports of JavaScript modules within the ",(0,a.kt)("inlineCode",{parentName:"p"},"/src/pages/")," directory.")),(0,a.kt)("h2",{id:"a-basic-page-component"},"A basic page component"),(0,a.kt)("p",null,"Here's an example ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js")," file for a page component. We'll break it down in the following sections."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'import { setupPaths, setupProps } from "../../../utils/page-setup";\nimport PageProvider from "../../../context/page-context";\nimport useLocale from "../../../hooks/use-locale";\n\nconst LOCALE_FOLDER = "about";\n\nconst AboutPage = ({}) => {\n  const { page, globals } = useLocale(LOCALE_FOLDER);\n\n  return (\n    <PageProvider page={LOCALE_FOLDER}>\n      <header>\n        <h1>{page.header.title}</h1>\n        <p>{page.header.body}</p>\n      </header>\n\n      <main></main>\n    </PageProvider>\n  );\n};\n\nexport const getStaticPaths = () => setupPaths(LOCALE_FOLDER);\nexport const getStaticProps = async (ctx) => setupProps(ctx, LOCALE_FOLDER);\n\nexport default AboutPage;\n')),(0,a.kt)("p",null,"As you can see, the component itself must be the default export of the JavaScript module. Let's break some of these pieces down so we can understand what we're looking at."),(0,a.kt)("h3",{id:"the-locale_folder-constant"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"LOCALE_FOLDER")," constant"),(0,a.kt)("p",null,"The value bound to this constant must match the directory path of your page's ",(0,a.kt)("inlineCode",{parentName:"p"},"locales")," folder. For example, if your homepage locale content lives in ",(0,a.kt)("inlineCode",{parentName:"p"},"/src/locales/home/"),", then your ",(0,a.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER")," value must be ",(0,a.kt)("inlineCode",{parentName:"p"},'"home"'),". Likewise, if a nested page's content lives at ",(0,a.kt)("inlineCode",{parentName:"p"},"/src/locales/work/advertising/"),", then your ",(0,a.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER")," value must be ",(0,a.kt)("inlineCode",{parentName:"p"},'"work/advertising"'),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER")," is used in many places within a top-level page component, as you can see above."),(0,a.kt)("h3",{id:"setuppaths-and-setupprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"setupPaths")," and ",(0,a.kt)("inlineCode",{parentName:"h3"},"setupProps")),(0,a.kt)("p",null,"These two functions are wrappers around Next.js' ",(0,a.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/basic-features/data-fetching/get-static-paths"},(0,a.kt)("inlineCode",{parentName:"a"},"getStaticPaths"))," and ",(0,a.kt)("a",{parentName:"p",href:"https://nextjs.org/docs/basic-features/data-fetching/get-static-props"},(0,a.kt)("inlineCode",{parentName:"a"},"getStaticProps")),", respectively. These functions are abstracted away in corgi so that you don't have to be ",(0,a.kt)("em",{parentName:"p"},"as")," concerned with the relatively complex setup of a page. Both of these functions must be imported into the page component, and subsequently exported as ",(0,a.kt)("inlineCode",{parentName:"p"},"getStaticPaths")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"getStaticProps"),"; passing in the ",(0,a.kt)("a",{parentName:"p",href:"#the-locale_folder-constant"},(0,a.kt)("inlineCode",{parentName:"a"},"LOCALE_FOLDER"))," constant to each."),(0,a.kt)("h3",{id:"the-uselocale-hook"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"useLocale")," hook"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useLocale")," hook is explained in detail in the ",(0,a.kt)("a",{parentName:"p",href:"../localization/use-locale-hook"},"useLocale hook documentation"),". What's relevant here, is that when setting up a top-level page component, you ",(0,a.kt)("em",{parentName:"p"},"must")," pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER")," string to the hook. Essentially, this acts as an initializer for the hook. Subsequent uses of the hook in other components do not require this step."),(0,a.kt)("h3",{id:"the-pageprovider-component"},"The ",(0,a.kt)("inlineCode",{parentName:"h3"},"<PageProvider>")," component"),(0,a.kt)("p",null,"The PageProvider component is a wrapper around all page content. It expects a ",(0,a.kt)("inlineCode",{parentName:"p"},"page")," prop, set to the string bound to ",(0,a.kt)("inlineCode",{parentName:"p"},"LOCALE_FOLDER"),". This allows corgi to maintain a cache of sorts, of the page-level content, which is useful when creating page transition animations. Rather than instantly changing the ",(0,a.kt)("inlineCode",{parentName:"p"},"page")," locale data during a page transition of, say, 500 miliseconds, the PageProvider knows to ",(0,a.kt)("em",{parentName:"p"},"not")," change the locale data to that of the incoming page until the transition is complete."),(0,a.kt)("h2",{id:"homepage-specifics"},"Homepage specifics"),(0,a.kt)("p",null,"One of corgi's localization opinions is that it gives users of the ",(0,a.kt)("em",{parentName:"p"},"default")," locale a nice, locale-free URL. For example, if your default locale is United States English (",(0,a.kt)("inlineCode",{parentName:"p"},'"en-us"'),"), the homepage of your project will live at ",(0,a.kt)("inlineCode",{parentName:"p"},"your-project.com"),", as opposed to ",(0,a.kt)("inlineCode",{parentName:"p"},"your-project.com/en-us"),"."),(0,a.kt)("p",null,'Because the "home" page component must live both at the project root ',(0,a.kt)("em",{parentName:"p"},"and")," the dynamic ","[locale]"," root, we must abstract the actual homepage content away, into its own component that can be shared across both of these root (",(0,a.kt)("inlineCode",{parentName:"p"},"index.js"),") files. By default, corgi sets this content up within the ",(0,a.kt)("inlineCode",{parentName:"p"},"/src/components/home-page-contents/home-page-contents.js")," file. Consequently, all your homepage content must be built-out from within this component, rather than the page two homepage ",(0,a.kt)("inlineCode",{parentName:"p"},"index.js")," components themselves."))}m.isMDXComponent=!0}}]);